
hello-world:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 68 51             	add    %ch,0x51(%rax)
 36a:	bc 62 fa 42 92       	mov    $0x9242fa62,%esp
 36f:	0b 6e c6             	or     -0x3a(%rsi),%ebp
 372:	4a 92                	rex.WX xchg %rax,%rdx
 374:	fb                   	sti    
 375:	87 e9                	xchg   %ebp,%ecx
 377:	20 5a cd             	and    %bl,-0x33(%rdx)
 37a:	ff                   	.byte 0xff
 37b:	6a                   	.byte 0x6a

Disassembly of section .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	07                   	(bad)  
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 01                	add    %al,(%rcx)
 3a9:	00 00                	add    %al,(%rax)
 3ab:	00 06                	add    %al,(%rsi)
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 07                	add    %al,(%rdi)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 d1                	add    %dl,%cl
 3c1:	65 ce                	gs (bad) 
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	45 00 00             	add    %r8b,(%r8)
 3e3:	00 20                	add    %ah,(%rax)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 0b                	add    %cl,(%rbx)
 3f9:	00 00                	add    %al,(%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 11                	add    %dl,(%rcx)
 411:	00 00                	add    %al,(%rax)
 413:	00 12                	add    %dl,(%rdx)
	...
 425:	00 00                	add    %al,(%rax)
 427:	00 27                	add    %ah,(%rdi)
 429:	00 00                	add    %al,(%rax)
 42b:	00 12                	add    %dl,(%rdx)
	...
 43d:	00 00                	add    %al,(%rax)
 43f:	00 61 00             	add    %ah,0x0(%rcx)
 442:	00 00                	add    %al,(%rax)
 444:	20 00                	and    %al,(%rax)
	...
 456:	00 00                	add    %al,(%rax)
 458:	70 00                	jo     45a <_init-0xba6>
 45a:	00 00                	add    %al,(%rax)
 45c:	20 00                	and    %al,(%rax)
	...
 46e:	00 00                	add    %al,(%rax)
 470:	18 00                	sbb    %al,(%rax)
 472:	00 00                	add    %al,(%rax)
 474:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000488 <.dynstr>:
 488:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 48c:	63 2e                	movslq (%rsi),%ebp
 48e:	73 6f                	jae    4ff <_init-0xb01>
 490:	2e 36 00 63 6c       	cs add %ah,%ss:0x6c(%rbx)
 495:	6f                   	outsl  %ds:(%rsi),(%dx)
 496:	63 6b 00             	movslq 0x0(%rbx),%ebp
 499:	70 72                	jo     50d <_init-0xaf3>
 49b:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 4a2:	63 78 61             	movslq 0x61(%rax),%edi
 4a5:	5f                   	pop    %rdi
 4a6:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 4ac:	7a 65                	jp     513 <_init-0xaed>
 4ae:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4b1:	6c                   	insb   (%dx),%es:(%rdi)
 4b2:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 4b9:	72 74                	jb     52f <_init-0xad1>
 4bb:	5f                   	pop    %rdi
 4bc:	6d                   	insl   (%dx),%es:(%rdi)
 4bd:	61                   	(bad)  
 4be:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 4c5:	43 5f                	rex.XB pop %r15
 4c7:	32 2e                	xor    (%rsi),%ch
 4c9:	32 2e                	xor    (%rsi),%ch
 4cb:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 4d0:	4d 5f                	rex.WRB pop %r15
 4d2:	64 65 72 65          	fs gs jb 53b <_init-0xac5>
 4d6:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 4dd:	4d 
 4de:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 4e0:	6f                   	outsl  %ds:(%rsi),(%dx)
 4e1:	6e                   	outsb  %ds:(%rsi),(%dx)
 4e2:	65 54                	gs push %rsp
 4e4:	61                   	(bad)  
 4e5:	62                   	(bad)  
 4e6:	6c                   	insb   (%dx),%es:(%rdi)
 4e7:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 4eb:	67 6d                	insl   (%dx),%es:(%edi)
 4ed:	6f                   	outsl  %ds:(%rsi),(%dx)
 4ee:	6e                   	outsb  %ds:(%rsi),(%dx)
 4ef:	5f                   	pop    %rdi
 4f0:	73 74                	jae    566 <_init-0xa9a>
 4f2:	61                   	(bad)  
 4f3:	72 74                	jb     569 <_init-0xa97>
 4f5:	5f                   	pop    %rdi
 4f6:	5f                   	pop    %rdi
 4f7:	00 5f 49             	add    %bl,0x49(%rdi)
 4fa:	54                   	push   %rsp
 4fb:	4d 5f                	rex.WRB pop %r15
 4fd:	72 65                	jb     564 <_init-0xa9c>
 4ff:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 506:	4d 
 507:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 509:	6f                   	outsl  %ds:(%rsi),(%dx)
 50a:	6e                   	outsb  %ds:(%rsi),(%dx)
 50b:	65 54                	gs push %rsp
 50d:	61                   	(bad)  
 50e:	62                   	.byte 0x62
 50f:	6c                   	insb   (%dx),%es:(%rdi)
 510:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000512 <.gnu.version>:
 512:	00 00                	add    %al,(%rax)
 514:	00 00                	add    %al,(%rax)
 516:	02 00                	add    (%rax),%al
 518:	02 00                	add    (%rax),%al
 51a:	02 00                	add    (%rax),%al
 51c:	00 00                	add    %al,(%rax)
 51e:	00 00                	add    %al,(%rax)
 520:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000528 <.gnu.version_r>:
 528:	01 00                	add    %eax,(%rax)
 52a:	01 00                	add    %eax,(%rax)
 52c:	01 00                	add    %eax,(%rax)
 52e:	00 00                	add    %al,(%rax)
 530:	10 00                	adc    %al,(%rax)
 532:	00 00                	add    %al,(%rax)
 534:	00 00                	add    %al,(%rax)
 536:	00 00                	add    %al,(%rax)
 538:	75 1a                	jne    554 <_init-0xaac>
 53a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 540:	39 00                	cmp    %eax,(%rax)
 542:	00 00                	add    %al,(%rax)
 544:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000548 <.rela.dyn>:
 548:	b0 3d                	mov    $0x3d,%al
 54a:	00 00                	add    %al,(%rax)
 54c:	00 00                	add    %al,(%rax)
 54e:	00 00                	add    %al,(%rax)
 550:	08 00                	or     %al,(%rax)
 552:	00 00                	add    %al,(%rax)
 554:	00 00                	add    %al,(%rax)
 556:	00 00                	add    %al,(%rax)
 558:	60                   	(bad)  
 559:	11 00                	adc    %eax,(%rax)
 55b:	00 00                	add    %al,(%rax)
 55d:	00 00                	add    %al,(%rax)
 55f:	00 b8 3d 00 00 00    	add    %bh,0x3d(%rax)
 565:	00 00                	add    %al,(%rax)
 567:	00 08                	add    %cl,(%rax)
 569:	00 00                	add    %al,(%rax)
 56b:	00 00                	add    %al,(%rax)
 56d:	00 00                	add    %al,(%rax)
 56f:	00 20                	add    %ah,(%rax)
 571:	11 00                	adc    %eax,(%rax)
 573:	00 00                	add    %al,(%rax)
 575:	00 00                	add    %al,(%rax)
 577:	00 08                	add    %cl,(%rax)
 579:	40 00 00             	add    %al,(%rax)
 57c:	00 00                	add    %al,(%rax)
 57e:	00 00                	add    %al,(%rax)
 580:	08 00                	or     %al,(%rax)
 582:	00 00                	add    %al,(%rax)
 584:	00 00                	add    %al,(%rax)
 586:	00 00                	add    %al,(%rax)
 588:	08 40 00             	or     %al,0x0(%rax)
 58b:	00 00                	add    %al,(%rax)
 58d:	00 00                	add    %al,(%rax)
 58f:	00 d8                	add    %bl,%al
 591:	3f                   	(bad)  
 592:	00 00                	add    %al,(%rax)
 594:	00 00                	add    %al,(%rax)
 596:	00 00                	add    %al,(%rax)
 598:	06                   	(bad)  
 599:	00 00                	add    %al,(%rax)
 59b:	00 01                	add    %al,(%rcx)
	...
 5a5:	00 00                	add    %al,(%rax)
 5a7:	00 e0                	add    %ah,%al
 5a9:	3f                   	(bad)  
 5aa:	00 00                	add    %al,(%rax)
 5ac:	00 00                	add    %al,(%rax)
 5ae:	00 00                	add    %al,(%rax)
 5b0:	06                   	(bad)  
 5b1:	00 00                	add    %al,(%rax)
 5b3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 5be:	00 00                	add    %al,(%rax)
 5c0:	e8 3f 00 00 00       	callq  604 <_init-0x9fc>
 5c5:	00 00                	add    %al,(%rax)
 5c7:	00 06                	add    %al,(%rsi)
 5c9:	00 00                	add    %al,(%rax)
 5cb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 5d1 <_init-0xa2f>
 5d1:	00 00                	add    %al,(%rax)
 5d3:	00 00                	add    %al,(%rax)
 5d5:	00 00                	add    %al,(%rax)
 5d7:	00 f0                	add    %dh,%al
 5d9:	3f                   	(bad)  
 5da:	00 00                	add    %al,(%rax)
 5dc:	00 00                	add    %al,(%rax)
 5de:	00 00                	add    %al,(%rax)
 5e0:	06                   	(bad)  
 5e1:	00 00                	add    %al,(%rax)
 5e3:	00 06                	add    %al,(%rsi)
	...
 5ed:	00 00                	add    %al,(%rax)
 5ef:	00 f8                	add    %bh,%al
 5f1:	3f                   	(bad)  
 5f2:	00 00                	add    %al,(%rax)
 5f4:	00 00                	add    %al,(%rax)
 5f6:	00 00                	add    %al,(%rax)
 5f8:	06                   	(bad)  
 5f9:	00 00                	add    %al,(%rax)
 5fb:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .rela.plt:

0000000000000608 <.rela.plt>:
 608:	c8 3f 00 00          	enterq $0x3f,$0x0
 60c:	00 00                	add    %al,(%rax)
 60e:	00 00                	add    %al,(%rax)
 610:	07                   	(bad)  
 611:	00 00                	add    %al,(%rax)
 613:	00 02                	add    %al,(%rdx)
	...
 61d:	00 00                	add    %al,(%rax)
 61f:	00 d0                	add    %dl,%al
 621:	3f                   	(bad)  
 622:	00 00                	add    %al,(%rax)
 624:	00 00                	add    %al,(%rax)
 626:	00 00                	add    %al,(%rax)
 628:	07                   	(bad)  
 629:	00 00                	add    %al,(%rax)
 62b:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 92 2f 00 00    	pushq  0x2f92(%rip)        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 93 2f 00 00 	bnd jmpq *0x2f93(%rip)        # 3fc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop

Disassembly of section .plt.got:

0000000000001050 <__cxa_finalize@plt>:
    1050:	f3 0f 1e fa          	endbr64 
    1054:	f2 ff 25 9d 2f 00 00 	bnd jmpq *0x2f9d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    105b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001060 <clock@plt>:
    1060:	f3 0f 1e fa          	endbr64 
    1064:	f2 ff 25 5d 2f 00 00 	bnd jmpq *0x2f5d(%rip)        # 3fc8 <clock@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001070 <printf@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 55 2f 00 00 	bnd jmpq *0x2f55(%rip)        # 3fd0 <printf@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	31 ed                	xor    %ebp,%ebp
    1086:	49 89 d1             	mov    %rdx,%r9
    1089:	5e                   	pop    %rsi
    108a:	48 89 e2             	mov    %rsp,%rdx
    108d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1091:	50                   	push   %rax
    1092:	54                   	push   %rsp
    1093:	4c 8d 05 c6 01 00 00 	lea    0x1c6(%rip),%r8        # 1260 <__libc_csu_fini>
    109a:	48 8d 0d 4f 01 00 00 	lea    0x14f(%rip),%rcx        # 11f0 <__libc_csu_init>
    10a1:	48 8d 3d f1 00 00 00 	lea    0xf1(%rip),%rdi        # 1199 <main>
    10a8:	ff 15 32 2f 00 00    	callq  *0x2f32(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ae:	f4                   	hlt    
    10af:	90                   	nop

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4010 <__TMC_END__>
    10b7:	48 8d 05 52 2f 00 00 	lea    0x2f52(%rip),%rax        # 4010 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmpq   *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	retq   
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 29 2f 00 00 	lea    0x2f29(%rip),%rdi        # 4010 <__TMC_END__>
    10e7:	48 8d 35 22 2f 00 00 	lea    0x2f22(%rip),%rsi        # 4010 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 89 f0             	mov    %rsi,%rax
    10f4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10f8:	48 c1 f8 03          	sar    $0x3,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    %rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmpq   *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	80 3d e5 2e 00 00 00 	cmpb   $0x0,0x2ee5(%rip)        # 4010 <__TMC_END__>
    112b:	75 2b                	jne    1158 <__do_global_dtors_aux+0x38>
    112d:	55                   	push   %rbp
    112e:	48 83 3d c2 2e 00 00 	cmpq   $0x0,0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1135:	00 
    1136:	48 89 e5             	mov    %rsp,%rbp
    1139:	74 0c                	je     1147 <__do_global_dtors_aux+0x27>
    113b:	48 8b 3d c6 2e 00 00 	mov    0x2ec6(%rip),%rdi        # 4008 <__dso_handle>
    1142:	e8 09 ff ff ff       	callq  1050 <__cxa_finalize@plt>
    1147:	e8 64 ff ff ff       	callq  10b0 <deregister_tm_clones>
    114c:	c6 05 bd 2e 00 00 01 	movb   $0x1,0x2ebd(%rip)        # 4010 <__TMC_END__>
    1153:	5d                   	pop    %rbp
    1154:	c3                   	retq   
    1155:	0f 1f 00             	nopl   (%rax)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	e9 77 ff ff ff       	jmpq   10e0 <register_tm_clones>

0000000000001169 <test_loop>:
    1169:	f3 0f 1e fa          	endbr64 
    116d:	55                   	push   %rbp
    116e:	48 89 e5             	mov    %rsp,%rbp
    1171:	8b 05 a1 2e 00 00    	mov    0x2ea1(%rip),%eax        # 4018 <count>
    1177:	8d 50 01             	lea    0x1(%rax),%edx
    117a:	89 15 98 2e 00 00    	mov    %edx,0x2e98(%rip)        # 4018 <count>
    1180:	89 c6                	mov    %eax,%esi
    1182:	48 8d 05 7b 0e 00 00 	lea    0xe7b(%rip),%rax        # 2004 <_IO_stdin_used+0x4>
    1189:	48 89 c7             	mov    %rax,%rdi
    118c:	b8 00 00 00 00       	mov    $0x0,%eax
    1191:	e8 da fe ff ff       	callq  1070 <printf@plt>
    1196:	90                   	nop
    1197:	5d                   	pop    %rbp
    1198:	c3                   	retq   

0000000000001199 <main>:
    1199:	f3 0f 1e fa          	endbr64 
    119d:	55                   	push   %rbp
    119e:	48 89 e5             	mov    %rsp,%rbp
    11a1:	e8 ba fe ff ff       	callq  1060 <clock@plt>
    11a6:	48 89 05 73 2e 00 00 	mov    %rax,0x2e73(%rip)        # 4020 <last_ticks>
    11ad:	b8 00 00 00 00       	mov    $0x0,%eax
    11b2:	e8 b2 ff ff ff       	callq  1169 <test_loop>
    11b7:	e8 a4 fe ff ff       	callq  1060 <clock@plt>
    11bc:	48 8b 15 5d 2e 00 00 	mov    0x2e5d(%rip),%rdx        # 4020 <last_ticks>
    11c3:	48 29 d0             	sub    %rdx,%rax
    11c6:	48 89 c6             	mov    %rax,%rsi
    11c9:	48 8d 05 46 0e 00 00 	lea    0xe46(%rip),%rax        # 2016 <_IO_stdin_used+0x16>
    11d0:	48 89 c7             	mov    %rax,%rdi
    11d3:	b8 00 00 00 00       	mov    $0x0,%eax
    11d8:	e8 93 fe ff ff       	callq  1070 <printf@plt>
    11dd:	e8 7e fe ff ff       	callq  1060 <clock@plt>
    11e2:	48 89 05 37 2e 00 00 	mov    %rax,0x2e37(%rip)        # 4020 <last_ticks>
    11e9:	eb c2                	jmp    11ad <main+0x14>
    11eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011f0 <__libc_csu_init>:
    11f0:	f3 0f 1e fa          	endbr64 
    11f4:	41 57                	push   %r15
    11f6:	4c 8d 3d b3 2b 00 00 	lea    0x2bb3(%rip),%r15        # 3db0 <__frame_dummy_init_array_entry>
    11fd:	41 56                	push   %r14
    11ff:	49 89 d6             	mov    %rdx,%r14
    1202:	41 55                	push   %r13
    1204:	49 89 f5             	mov    %rsi,%r13
    1207:	41 54                	push   %r12
    1209:	41 89 fc             	mov    %edi,%r12d
    120c:	55                   	push   %rbp
    120d:	48 8d 2d a4 2b 00 00 	lea    0x2ba4(%rip),%rbp        # 3db8 <__do_global_dtors_aux_fini_array_entry>
    1214:	53                   	push   %rbx
    1215:	4c 29 fd             	sub    %r15,%rbp
    1218:	48 83 ec 08          	sub    $0x8,%rsp
    121c:	e8 df fd ff ff       	callq  1000 <_init>
    1221:	48 c1 fd 03          	sar    $0x3,%rbp
    1225:	74 1f                	je     1246 <__libc_csu_init+0x56>
    1227:	31 db                	xor    %ebx,%ebx
    1229:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1230:	4c 89 f2             	mov    %r14,%rdx
    1233:	4c 89 ee             	mov    %r13,%rsi
    1236:	44 89 e7             	mov    %r12d,%edi
    1239:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    123d:	48 83 c3 01          	add    $0x1,%rbx
    1241:	48 39 dd             	cmp    %rbx,%rbp
    1244:	75 ea                	jne    1230 <__libc_csu_init+0x40>
    1246:	48 83 c4 08          	add    $0x8,%rsp
    124a:	5b                   	pop    %rbx
    124b:	5d                   	pop    %rbp
    124c:	41 5c                	pop    %r12
    124e:	41 5d                	pop    %r13
    1250:	41 5e                	pop    %r14
    1252:	41 5f                	pop    %r15
    1254:	c3                   	retq   
    1255:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    125c:	00 00 00 00 

0000000000001260 <__libc_csu_fini>:
    1260:	f3 0f 1e fa          	endbr64 
    1264:	c3                   	retq   

Disassembly of section .fini:

0000000000001268 <_fini>:
    1268:	f3 0f 1e fa          	endbr64 
    126c:	48 83 ec 08          	sub    $0x8,%rsp
    1270:	48 83 c4 08          	add    $0x8,%rsp
    1274:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	48                   	rex.W
    2005:	65 6c                	gs insb (%dx),%es:(%rdi)
    2007:	6c                   	insb   (%dx),%es:(%rdi)
    2008:	6f                   	outsl  %ds:(%rsi),(%dx)
    2009:	2c 20                	sub    $0x20,%al
    200b:	57                   	push   %rdi
    200c:	6f                   	outsl  %ds:(%rsi),(%dx)
    200d:	72 6c                	jb     207b <__GNU_EH_FRAME_HDR+0x5b>
    200f:	64 20 25 64 21 0a 00 	and    %ah,%fs:0xa2164(%rip)        # a417a <_end+0xa0152>
    2016:	54                   	push   %rsp
    2017:	69 6d 65 20 25 6c 64 	imul   $0x646c2520,0x65(%rbp),%ebp
    201e:	0a 00                	or     (%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000002020 <__GNU_EH_FRAME_HDR>:
    2020:	01 1b                	add    %ebx,(%rbx)
    2022:	03 3b                	add    (%rbx),%edi
    2024:	4c 00 00             	rex.WR add %r8b,(%rax)
    2027:	00 08                	add    %cl,(%rax)
    2029:	00 00                	add    %al,(%rax)
    202b:	00 00                	add    %al,(%rax)
    202d:	f0 ff                	lock (bad) 
    202f:	ff 80 00 00 00 30    	incl   0x30000000(%rax)
    2035:	f0 ff                	lock (bad) 
    2037:	ff a8 00 00 00 40    	ljmp   *0x40000000(%rax)
    203d:	f0 ff                	lock (bad) 
    203f:	ff c0                	inc    %eax
    2041:	00 00                	add    %al,(%rax)
    2043:	00 60 f0             	add    %ah,-0x10(%rax)
    2046:	ff                   	(bad)  
    2047:	ff 68 00             	ljmp   *0x0(%rax)
    204a:	00 00                	add    %al,(%rax)
    204c:	49 f1                	rex.WB icebp 
    204e:	ff                   	(bad)  
    204f:	ff                   	(bad)  
    2050:	d8 00                	fadds  (%rax)
    2052:	00 00                	add    %al,(%rax)
    2054:	79 f1                	jns    2047 <__GNU_EH_FRAME_HDR+0x27>
    2056:	ff                   	(bad)  
    2057:	ff                   	(bad)  
    2058:	f8                   	clc    
    2059:	00 00                	add    %al,(%rax)
    205b:	00 d0                	add    %dl,%al
    205d:	f1                   	icebp  
    205e:	ff                   	(bad)  
    205f:	ff 18                	lcall  *(%rax)
    2061:	01 00                	add    %eax,(%rax)
    2063:	00 40 f2             	add    %al,-0xe(%rax)
    2066:	ff                   	(bad)  
    2067:	ff 60 01             	jmpq   *0x1(%rax)
	...

Disassembly of section .eh_frame:

0000000000002070 <__FRAME_END__-0x124>:
    2070:	14 00                	adc    $0x0,%al
    2072:	00 00                	add    %al,(%rax)
    2074:	00 00                	add    %al,(%rax)
    2076:	00 00                	add    %al,(%rax)
    2078:	01 7a 52             	add    %edi,0x52(%rdx)
    207b:	00 01                	add    %al,(%rcx)
    207d:	78 10                	js     208f <__GNU_EH_FRAME_HDR+0x6f>
    207f:	01 1b                	add    %ebx,(%rbx)
    2081:	0c 07                	or     $0x7,%al
    2083:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2089:	00 00                	add    %al,(%rax)
    208b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    208e:	00 00                	add    %al,(%rax)
    2090:	f0 ef                	lock out %eax,(%dx)
    2092:	ff                   	(bad)  
    2093:	ff 2f                	ljmp   *(%rdi)
    2095:	00 00                	add    %al,(%rax)
    2097:	00 00                	add    %al,(%rax)
    2099:	44 07                	rex.R (bad) 
    209b:	10 00                	adc    %al,(%rax)
    209d:	00 00                	add    %al,(%rax)
    209f:	00 24 00             	add    %ah,(%rax,%rax,1)
    20a2:	00 00                	add    %al,(%rax)
    20a4:	34 00                	xor    $0x0,%al
    20a6:	00 00                	add    %al,(%rax)
    20a8:	78 ef                	js     2099 <__GNU_EH_FRAME_HDR+0x79>
    20aa:	ff                   	(bad)  
    20ab:	ff 30                	pushq  (%rax)
    20ad:	00 00                	add    %al,(%rax)
    20af:	00 00                	add    %al,(%rax)
    20b1:	0e                   	(bad)  
    20b2:	10 46 0e             	adc    %al,0xe(%rsi)
    20b5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20b8:	0b 77 08             	or     0x8(%rdi),%esi
    20bb:	80 00 3f             	addb   $0x3f,(%rax)
    20be:	1a 3a                	sbb    (%rdx),%bh
    20c0:	2a 33                	sub    (%rbx),%dh
    20c2:	24 22                	and    $0x22,%al
    20c4:	00 00                	add    %al,(%rax)
    20c6:	00 00                	add    %al,(%rax)
    20c8:	14 00                	adc    $0x0,%al
    20ca:	00 00                	add    %al,(%rax)
    20cc:	5c                   	pop    %rsp
    20cd:	00 00                	add    %al,(%rax)
    20cf:	00 80 ef ff ff 10    	add    %al,0x10ffffef(%rax)
	...
    20dd:	00 00                	add    %al,(%rax)
    20df:	00 14 00             	add    %dl,(%rax,%rax,1)
    20e2:	00 00                	add    %al,(%rax)
    20e4:	74 00                	je     20e6 <__GNU_EH_FRAME_HDR+0xc6>
    20e6:	00 00                	add    %al,(%rax)
    20e8:	78 ef                	js     20d9 <__GNU_EH_FRAME_HDR+0xb9>
    20ea:	ff                   	(bad)  
    20eb:	ff 20                	jmpq   *(%rax)
	...
    20f5:	00 00                	add    %al,(%rax)
    20f7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    20fa:	00 00                	add    %al,(%rax)
    20fc:	8c 00                	mov    %es,(%rax)
    20fe:	00 00                	add    %al,(%rax)
    2100:	69 f0 ff ff 30 00    	imul   $0x30ffff,%eax,%esi
    2106:	00 00                	add    %al,(%rax)
    2108:	00 45 0e             	add    %al,0xe(%rbp)
    210b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2111:	67 0c 07             	addr32 or $0x7,%al
    2114:	08 00                	or     %al,(%rax)
    2116:	00 00                	add    %al,(%rax)
    2118:	1c 00                	sbb    $0x0,%al
    211a:	00 00                	add    %al,(%rax)
    211c:	ac                   	lods   %ds:(%rsi),%al
    211d:	00 00                	add    %al,(%rax)
    211f:	00 79 f0             	add    %bh,-0x10(%rcx)
    2122:	ff                   	(bad)  
    2123:	ff 52 00             	callq  *0x0(%rdx)
    2126:	00 00                	add    %al,(%rax)
    2128:	00 45 0e             	add    %al,0xe(%rbp)
    212b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2131:	00 00                	add    %al,(%rax)
    2133:	00 00                	add    %al,(%rax)
    2135:	00 00                	add    %al,(%rax)
    2137:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    213b:	00 cc                	add    %cl,%ah
    213d:	00 00                	add    %al,(%rax)
    213f:	00 b0 f0 ff ff 65    	add    %dh,0x65fffff0(%rax)
    2145:	00 00                	add    %al,(%rax)
    2147:	00 00                	add    %al,(%rax)
    2149:	46 0e                	rex.RX (bad) 
    214b:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2151:	8e 03                	mov    (%rbx),%es
    2153:	45 0e                	rex.RB (bad) 
    2155:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    215b:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86302fa5 <_end+0xffffffff862fef7d>
    2161:	06                   	(bad)  
    2162:	48 0e                	rex.W (bad) 
    2164:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    216a:	6e                   	outsb  %ds:(%rsi),(%dx)
    216b:	0e                   	(bad)  
    216c:	38 41 0e             	cmp    %al,0xe(%rcx)
    216f:	30 41 0e             	xor    %al,0xe(%rcx)
    2172:	28 42 0e             	sub    %al,0xe(%rdx)
    2175:	20 42 0e             	and    %al,0xe(%rdx)
    2178:	18 42 0e             	sbb    %al,0xe(%rdx)
    217b:	10 42 0e             	adc    %al,0xe(%rdx)
    217e:	08 00                	or     %al,(%rax)
    2180:	10 00                	adc    %al,(%rax)
    2182:	00 00                	add    %al,(%rax)
    2184:	14 01                	adc    $0x1,%al
    2186:	00 00                	add    %al,(%rax)
    2188:	d8 f0                	fdiv   %st(0),%st
    218a:	ff                   	(bad)  
    218b:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 2191 <__GNU_EH_FRAME_HDR+0x171>
    2191:	00 00                	add    %al,(%rax)
	...

0000000000002194 <__FRAME_END__>:
    2194:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003db0 <__frame_dummy_init_array_entry>:
    3db0:	60                   	(bad)  
    3db1:	11 00                	adc    %eax,(%rax)
    3db3:	00 00                	add    %al,(%rax)
    3db5:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003db8 <__do_global_dtors_aux_fini_array_entry>:
    3db8:	20 11                	and    %dl,(%rcx)
    3dba:	00 00                	add    %al,(%rax)
    3dbc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003dc0 <_DYNAMIC>:
    3dc0:	01 00                	add    %eax,(%rax)
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
    3dc6:	00 00                	add    %al,(%rax)
    3dc8:	01 00                	add    %eax,(%rax)
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	0c 00                	or     $0x0,%al
    3dd2:	00 00                	add    %al,(%rax)
    3dd4:	00 00                	add    %al,(%rax)
    3dd6:	00 00                	add    %al,(%rax)
    3dd8:	00 10                	add    %dl,(%rax)
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	0d 00 00 00 00       	or     $0x0,%eax
    3de5:	00 00                	add    %al,(%rax)
    3de7:	00 68 12             	add    %ch,0x12(%rax)
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
    3dee:	00 00                	add    %al,(%rax)
    3df0:	19 00                	sbb    %eax,(%rax)
    3df2:	00 00                	add    %al,(%rax)
    3df4:	00 00                	add    %al,(%rax)
    3df6:	00 00                	add    %al,(%rax)
    3df8:	b0 3d                	mov    $0x3d,%al
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	1b 00                	sbb    (%rax),%eax
    3e02:	00 00                	add    %al,(%rax)
    3e04:	00 00                	add    %al,(%rax)
    3e06:	00 00                	add    %al,(%rax)
    3e08:	08 00                	or     %al,(%rax)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	1a 00                	sbb    (%rax),%al
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	b8 3d 00 00 00       	mov    $0x3d,%eax
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3e22:	00 00                	add    %al,(%rax)
    3e24:	00 00                	add    %al,(%rax)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	08 00                	or     %al,(%rax)
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	f5                   	cmc    
    3e31:	fe                   	(bad)  
    3e32:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e45 <_DYNAMIC+0x85>
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 88 04 00 00 00    	add    %cl,0x4(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 06                	add    %al,(%rsi)
    3e51:	00 00                	add    %al,(%rax)
    3e53:	00 00                	add    %al,(%rax)
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 c8                	add    %cl,%al
    3e59:	03 00                	add    (%rax),%eax
    3e5b:	00 00                	add    %al,(%rax)
    3e5d:	00 00                	add    %al,(%rax)
    3e5f:	00 0a                	add    %cl,(%rdx)
    3e61:	00 00                	add    %al,(%rax)
    3e63:	00 00                	add    %al,(%rax)
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 8a 00 00 00 00    	add    %cl,0x0(%rdx)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 0b                	add    %cl,(%rbx)
    3e71:	00 00                	add    %al,(%rax)
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 18                	add    %bl,(%rax)
    3e79:	00 00                	add    %al,(%rax)
    3e7b:	00 00                	add    %al,(%rax)
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e85 <_DYNAMIC+0xc5>
	...
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 03                	add    %al,(%rbx)
    3e91:	00 00                	add    %al,(%rax)
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 b0 3f 00 00 00    	add    %dh,0x3f(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 02                	add    %al,(%rdx)
    3ea1:	00 00                	add    %al,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 30                	add    %dh,(%rax)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eb2:	00 00                	add    %al,(%rax)
    3eb4:	00 00                	add    %al,(%rax)
    3eb6:	00 00                	add    %al,(%rax)
    3eb8:	07                   	(bad)  
    3eb9:	00 00                	add    %al,(%rax)
    3ebb:	00 00                	add    %al,(%rax)
    3ebd:	00 00                	add    %al,(%rax)
    3ebf:	00 17                	add    %dl,(%rdi)
    3ec1:	00 00                	add    %al,(%rax)
    3ec3:	00 00                	add    %al,(%rax)
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 08                	add    %cl,(%rax)
    3ec9:	06                   	(bad)  
    3eca:	00 00                	add    %al,(%rax)
    3ecc:	00 00                	add    %al,(%rax)
    3ece:	00 00                	add    %al,(%rax)
    3ed0:	07                   	(bad)  
    3ed1:	00 00                	add    %al,(%rax)
    3ed3:	00 00                	add    %al,(%rax)
    3ed5:	00 00                	add    %al,(%rax)
    3ed7:	00 48 05             	add    %cl,0x5(%rax)
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	08 00                	or     %al,(%rax)
    3ee2:	00 00                	add    %al,(%rax)
    3ee4:	00 00                	add    %al,(%rax)
    3ee6:	00 00                	add    %al,(%rax)
    3ee8:	c0 00 00             	rolb   $0x0,(%rax)
    3eeb:	00 00                	add    %al,(%rax)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 09                	add    %cl,(%rcx)
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 18                	add    %bl,(%rax)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 1e                	add    %bl,(%rsi)
    3f01:	00 00                	add    %al,(%rax)
    3f03:	00 00                	add    %al,(%rax)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 08                	add    %cl,(%rax)
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 fb                	add    %bh,%bl
    3f11:	ff                   	(bad)  
    3f12:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 01                	add    %al,(%rcx)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	08 00                	or     %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 fe                	add    %bh,%dh
    3f21:	ff                   	(bad)  
    3f22:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 28                	add    %ch,(%rax)
    3f29:	05 00 00 00 00       	add    $0x0,%eax
    3f2e:	00 00                	add    %al,(%rax)
    3f30:	ff                   	(bad)  
    3f31:	ff                   	(bad)  
    3f32:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 01                	add    %al,(%rcx)
    3f39:	00 00                	add    %al,(%rax)
    3f3b:	00 00                	add    %al,(%rax)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 f0                	add    %dh,%al
    3f41:	ff                   	(bad)  
    3f42:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 12                	add    %dl,(%rdx)
    3f49:	05 00 00 00 00       	add    $0x0,%eax
    3f4e:	00 00                	add    %al,(%rax)
    3f50:	f9                   	stc    
    3f51:	ff                   	(bad)  
    3f52:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f55:	00 00                	add    %al,(%rax)
    3f57:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fb0 <_GLOBAL_OFFSET_TABLE_>:
    3fb0:	c0 3d 00 00 00 00 00 	sarb   $0x0,0x0(%rip)        # 3fb7 <_GLOBAL_OFFSET_TABLE_+0x7>
	...
    3fc7:	00 30                	add    %dh,(%rax)
    3fc9:	10 00                	adc    %al,(%rax)
    3fcb:	00 00                	add    %al,(%rax)
    3fcd:	00 00                	add    %al,(%rax)
    3fcf:	00 40 10             	add    %al,0x10(%rax)
	...

Disassembly of section .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000004010 <completed.0>:
	...

0000000000004018 <count>:
	...

0000000000004020 <last_ticks>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 31                	and    %dh,(%rcx)
   e:	31 2e                	xor    %ebp,(%rsi)
  10:	34 2e                	xor    $0x2e,%al
  12:	30 2d 32 75 62 75    	xor    %ch,0x75627532(%rip)        # 7562754a <_end+0x75623522>
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <_init-0xf70>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	30 2e                	xor    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 31                	and    %dh,(%rcx)
  25:	31 2e                	xor    %ebp,(%rsi)
  27:	34 2e                	xor    $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
